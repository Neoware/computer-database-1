<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.exclilys</groupId>
	<artifactId>computer-database</artifactId>
	<packaging>war</packaging>
	<version>0.3</version>
	<url>https://github.com/Warlot-PQ/computer-database</url>
	
	<properties>	
		<dbIP>localhost</dbIP>
		<maven-checkstyle-plugin.version>2.17</maven-checkstyle-plugin.version>
		<maven-compiler-plugin.version>3.3</maven-compiler-plugin.version>
		<maven-resources-plugin.version>3.0.1</maven-resources-plugin.version>
		<maven-war-plugin.version>2.6</maven-war-plugin.version>
		<cargo-maven2-plugin.version>1.4.19</cargo-maven2-plugin.version>
		<selenium-maven-plugin.version>2.3</selenium-maven-plugin.version>
		<maven-surefire-plugin.version>2.4.3</maven-surefire-plugin.version>
		<javax.servlet-api.version>4.0.0-b01</javax.servlet-api.version>
		<javax.servlet.jsp-api.version>2.2.1</javax.servlet.jsp-api.version>
		<mysql-connector-java.version>5.1.39</mysql-connector-java.version>
		<junit.version>4.12</junit.version>
		<logback-classic.version>1.1.7</logback-classic.version>
		<logback-core.version>1.1.7</logback-core.version>
		<org.slf4j.api.version>1.7.2</org.slf4j.api.version>
		<jstl.version>1.2</jstl.version>
		<selenium-java.version>2.28.0</selenium-java.version>
		<selenium-remote-driver.version>2.53.0</selenium-remote-driver.version>
		<selenium-chrome-driver.version>2.45.0</selenium-chrome-driver.version>
		<phantomjsdriver.version>1.2.1</phantomjsdriver.version>
		<jsp-2.1.version>6.0.0</jsp-2.1.version>
		<commons-lang3.version>3.4</commons-lang3.version>
		<HikariCP.version>2.4.5</HikariCP.version>
		<mockito-all.version>1.9.5</mockito-all.version>
		<tomcat.directory>${project.basedir}/apache-tomcat-8.0.33</tomcat.directory>
	</properties>
	
	<build>
		<resources>
			<resource>
				<directory>${project.basedir}/src/main/resources</directory>
        		<filtering>true</filtering>
			</resource>
		</resources>
		<testResources>
            <testResource>
                <directory>${project.basedir}/src/test/resources</directory>
                <filtering>true</filtering>
            </testResource>
        </testResources>
	
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>${maven-checkstyle-plugin.version}</version>
				<configuration>
					<configLocation>checkstyle.xml</configLocation>
				</configuration>
			</plugin>
			
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven-compiler-plugin.version}</version>
				<configuration>
					<!-- JDK version -->
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>${maven-resources-plugin.version}</version>
			</plugin>

			<!-- Package as war file -->
			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<version>${maven-war-plugin.version}</version>
				<configuration>
					<failOnMissingWebXml>false</failOnMissingWebXml>
				</configuration>
			</plugin>

			<!-- start Tomcat server at pre-integration-test, stop it at post-integration-test -->
			<plugin>
				<groupId>org.codehaus.cargo</groupId>
				<artifactId>cargo-maven2-plugin</artifactId>
				<version>${cargo-maven2-plugin.version}</version>
				<configuration>
					<wait>false</wait>
					<container>
						<containerId>tomcat8x</containerId>
						<type>installed</type>
						<home>${tomcat.directory}</home>
					</container>
				</configuration>
				<executions>
					<execution>
						<id>start-container</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>start</goal>
							<goal>deploy</goal>
						</goals>
					</execution>
					<execution>
						<id>stop-container</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>stop</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- start Selenium server at pre-integration-test, stop it at post-integration-test -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>selenium-maven-plugin</artifactId>
				<version>${selenium-maven-plugin.version}</version>
				<executions>
					<execution>
						<id>start</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>start-server</goal>
						</goals>
						<configuration>
							<background>true</background>
							<logOutput>true</logOutput>
						</configuration>
					</execution>
					<execution>
						<id>stop</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>stop-server</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- Run unit tests during test phase but exclude the Selenium test classes -->
			<!-- Run the Selenium test classes during the integration-test phase -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${maven-surefire-plugin.version}</version>
				<configuration>
					<junitartifactname>
						org.junit:com.springsource.org.junit
					</junitartifactname>
					<excludes>
						<!-- excluding the test class in the functional tests package during 
							the test phase -->
						<exclude>**/selenium/*Test.java</exclude>
					</excludes>
				</configuration>
				<executions>
					<execution>
						<!-- Running the tests in the functional tests package during the integration 
							tests phase. -->
						<id>integration-tests</id>
						<phase>integration-test</phase>
						<goals>
							<goal>test</goal>
						</goals>
						<configuration>
							<skip>false</skip>
							<excludes>
								<exclude>none</exclude>
							</excludes>
							<includes>
								<include>**/selenium/*Test.java</include>
							</includes>
						</configuration>
					</execution>
				</executions>
			</plugin>

		</plugins>
	</build>

	<dependencies>

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>${javax.servlet-api.version}</version>
		</dependency>

		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>javax.servlet.jsp-api</artifactId>
			<version>${javax.servlet.jsp-api.version}</version>
		</dependency>

		<!-- MySql 5.X Connector -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>${mysql-connector-java.version}</version>
			<scope>runtime</scope>
		</dependency>

		<!-- jUnit 4.X -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>

		<!-- SLF4j with LogBack implementation -->

		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>${logback-classic.version}</version>
		</dependency>

		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-core</artifactId>
			<version>${logback-core.version}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.directory.studio</groupId>
			<artifactId>org.slf4j.api</artifactId>
			<version>${org.slf4j.api.version}</version>
		</dependency>

		<!-- Servlet API -->

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>${jstl.version}</version>
		</dependency>

		<!-- Integration test -->

		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-java</artifactId>
			<version>${selenium-java.version}</version>
			<scope>test</scope>
		</dependency>
	
	
		<dependency>
            <groupId>org.seleniumhq.selenium</groupId>
            <artifactId>selenium-remote-driver</artifactId>
            <version>${selenium-remote-driver.version}</version>
        </dependency>
        
		<dependency>
	      <groupId>org.seleniumhq.selenium</groupId>
	      <artifactId>selenium-chrome-driver</artifactId>
	      <version>${selenium-chrome-driver.version}</version>
	    </dependency>  
    
		<dependency>
            <groupId>com.codeborne</groupId>
            <artifactId>phantomjsdriver</artifactId>
            <version>${phantomjsdriver.version}</version>
            <scope>test</scope>
        </dependency>
	
	
		<dependency>
			<groupId>org.mortbay.jetty</groupId>
			<artifactId>jsp-2.1</artifactId>
			<version>${jsp-2.1.version}</version>
			<scope>test</scope>
		</dependency>
		
		<!-- Manipulate core classes (e.g. escape HTML string) -->
		
		<dependency>
			<groupId>org.apache.commons</groupId>
			  <artifactId>commons-lang3</artifactId>
			  <version>${commons-lang3.version}</version>
		</dependency>
		
		<!-- Connection pool -->
		<dependency>
		    <groupId>com.zaxxer</groupId>
		    <artifactId>HikariCP</artifactId>
		    <version>${HikariCP.version}</version>
		    <scope>compile</scope>
		</dependency>
		
		<!-- Unit testing using mock object -->
		
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>${mockito-all.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

</project>